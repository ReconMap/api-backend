<?php declare(strict_types=1);

namespace Reconmap\Controllers\Vulnerabilities;

use Psr\Http\Message\ResponseInterface;
use Psr\Http\Message\ServerRequestInterface;
use Reconmap\Controllers\Controller;
use Reconmap\Models\Vulnerability;
use Reconmap\Repositories\CustomFieldRepository;
use Reconmap\Repositories\VulnerabilityRepository;

class CreateVulnerabilityController extends Controller
{
    public function __construct(private readonly VulnerabilityRepository $repository, private readonly CustomFieldRepository $customFieldRepository)
    {
    }

    public function __invoke(ServerRequestInterface $request): ResponseInterface
    {
        $customFieldNames = array_map(fn($customFieldDefinition) => $customFieldDefinition['name'], $this->customFieldRepository->findAll());
        $body = json_decode($request->getBody()->getContents(), true);

        $customFields = array_filter($body, fn($v, $k) => in_array($k, $customFieldNames), ARRAY_FILTER_USE_BOTH);

        /** @var Vulnerability $vulnerability */
        $vulnerability = $this->getJsonBodyDecodedAsClass($request, new Vulnerability(), false);
        $vulnerability->custom_fields = json_encode($customFields);
        $vulnerability->creator_uid = $request->getAttribute('userId');
        $vulnerability->id = $this->repository->insert($vulnerability);

        return $this->createStatusCreatedResponse($vulnerability);
    }
}
